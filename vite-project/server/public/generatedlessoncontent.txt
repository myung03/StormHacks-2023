## Introduction à la fusion de jeux de données

Dans cette leçon, nous allons apprendre à fusionner des jeux de données en utilisant deux méthodes principales: **inner_join()** et **left_join()**. Ces fonctions sont essentielles pour combiner des informations provenant de différentes sources et les organiser dans un format structuré.

<?!>## Préparer les jeux de données pour la fusion

Avant de fusionner les jeux de données, il est important de s'assurer que les variables clés ont le même nom et le même type dans les deux jeux de données. Cela permettra d'éviter les erreurs et les incohérences lors de la fusion.

<?!>## Méthode 1: inner_join()

**inner_join()** est une fonction qui retourne uniquement les lignes où il y a une correspondance entre les deux jeux de données. Si une ligne de l'un des jeux de données n'a pas de correspondance dans l'autre jeu de données, elle ne sera pas incluse dans le résultat final.

Exemple d'utilisation:

```
resultat <- inner_join(dataset1, dataset2, by = "variable_cle")
```

<?!>## Méthode 2: left_join()

Contrairement à **inner_join()**, la fonction **left_join()** retourne toutes les lignes du jeu de données de gauche et les colonnes correspondantes du jeu de données de droite. Si une ligne du jeu de données de gauche n'a pas de correspondance dans le jeu de données de droite, les valeurs des colonnes du jeu de données de droite seront remplacées par des valeurs manquantes (NA).

Exemple d'utilisation:

```
resultat <- left_join(dataset1, dataset2, by = "variable_cle")
```

<?!>## Fusion avec des variables clés différentes

Dans certains cas, les variables clés dans les deux jeux de données peuvent avoir des noms différents. Pour spécifier les variables correspondantes lors de l'utilisation de **left_join()**, utilisez l'argument `by = c("keyvar1" = "keyvar2")`.

Exemple d'utilisation:

```
resultat <- left_join(dataset1, dataset2, by = c("variable_cle1" = "variable_cle2"))
```

<?!>## Points à considérer lors de la fusion

Il est possible d'avoir une correspondance non-un-à-un entre les jeux de données. Dans ce cas, il est important que l'un des jeux de données dispose d'un identifiant unique pour éviter les erreurs et les duplications de données.

En résumé, la fusion de jeux de données est une étape cruciale dans le traitement et l'analyse des données. Les fonctions **inner_join()** et **left_join()** sont des outils puissants pour combiner des informations provenant de différentes sources et les structurer de manière cohérente.
