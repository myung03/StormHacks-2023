## Introduction au système de gestion de l'information

Dans cette leçon, nous aborderons les méthodes de fusion de jeux de données à l'aide de **R**. Nous utiliserons les fonctions **inner_join()** et **left_join()** pour combiner des ensembles de données basés sur des valeurs correspondantes dans des attributs spécifiques.

<?!>## Fusion de jeux de données

Nous couvrirons deux types de méthodes pour fusionner des jeux de données:

1. **inner_join()**
2. **left_join()**

Ces fonctions permettent de faire correspondre les observations de deux jeux de données en fonction des valeurs correspondantes dans un ou plusieurs attributs.

<?!>## Utilisation de la fonction left_join()

La fonction **left_join(x, y)** renvoie toutes les lignes de x et toutes les colonnes de x et y. Supposons que nous ayons deux ensembles de données, **example1** et **example2**. Nous souhaitons améliorer le jeu de données **example1** en apportant autant d'informations que possible depuis **example2**. Pour ce faire, nous utilisons la fonction **left_join()**.

Exemple de code:

```
merged2 <- left_join(example1, example2)
```

<?!>## Fonctionnement de left_join()

Pour les valeurs correspondantes de l'attribut de jointure (dans cet exemple, la combinaison de gvkey et fyear), **left_join()** lie les informations apparaissant dans les deux jeux de données. Les observations dans l'ensemble de données "gauche" qui n'ont pas d'observations correspondantes dans l'autre ensemble de données seront conservées dans l'ensemble de données fusionné résultant.

<?!>## Correspondance non un-à-un

Lorsque vous fusionnez deux jeux de données dont les variables clés identifient de manière unique chaque observation dans le jeu de données, ce type de fusion est appelé fusion un-à-un. Cependant, les attributs utilisés comme base de correspondance des observations dans deux ensembles de données ne doivent pas nécessairement être des variables clés pour les deux ensembles de données.

Dans de telles situations, une observation dans un ensemble de données peut correspondre à plusieurs observations dans les autres ensembles de données grâce à une correspondance non un-à-un.

<?!>## Exemple de correspondance non un-à-un

Supposons que nous ayons deux ensembles de données, le premier est un sous-ensemble du jeu de données complet **North American Stock Market 1994-2018.rds**. **example3.rds** contient gvkey, fyear et le code industriel (naicsh) de toutes les observations en fyear == 2016.

Nous souhaitons fusionner les deux ensembles de données, de sorte que chaque observation aura les variables suivantes: gvkey, fyear, naicsh et NAICS_description. Ceci tentera d'ajouter la description de l'industrie à chaque observation dans le jeu de données **Example3**.

Exemple de code:

```
merged3 <- left_join(example3, NAICS_2_6_digit_codes, by = c("naicsh" = "NAICS"))
```

En conclusion, la fusion de jeux de données est une étape cruciale dans le traitement et l'analyse des données. Les fonctions **inner_join()** et **left_join()** permettent de combiner efficacement des ensembles de données en fonction des attributs spécifiques, facilitant ainsi l'analyse et la compréhension des données.
